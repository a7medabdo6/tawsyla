name: Build Image and Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          cd tawsyla_backend
          docker build -t tawsyla-backend:${{ github.sha }} .
          docker tag tawsyla-backend:${{ github.sha }} tawsyla-backend:latest

      - name: Save Docker Image
        run: |
          docker save tawsyla-backend:latest | gzip > tawsyla-backend.tar.gz

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DROPLET_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.DROPLET_HOST }} >> ~/.ssh/known_hosts
          
          # Test SSH connection
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_HOST }} "echo 'SSH connection successful'"

      - name: Transfer Docker Image to Droplet
        env:
          DROPLET_HOST: ${{ secrets.DROPLET_HOST }}
          DROPLET_USERNAME: ${{ secrets.DROPLET_USERNAME }}
        run: |
          # Create directory on droplet
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no $DROPLET_USERNAME@$DROPLET_HOST "mkdir -p /opt/tawsyla/tawsyla_backend"
          
          # Transfer the image
          scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no tawsyla-backend.tar.gz $DROPLET_USERNAME@$DROPLET_HOST:/opt/tawsyla/
          
          # Transfer docker-compose and necessary files
          scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no docker-compose.yaml $DROPLET_USERNAME@$DROPLET_HOST:/opt/tawsyla/
          scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no tawsyla_backend/.env $DROPLET_USERNAME@$DROPLET_HOST:/opt/tawsyla/tawsyla_backend/

      - name: Load and Run Docker Image
        env:
          DROPLET_HOST: ${{ secrets.DROPLET_HOST }}
          DROPLET_USERNAME: ${{ secrets.DROPLET_USERNAME }}
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no $DROPLET_USERNAME@$DROPLET_HOST << 'EOF'
            cd /opt/tawsyla
            
            # Load the Docker image
            docker load < tawsyla-backend.tar.gz
            
            # Stop existing containers
            docker-compose down
            
            # Start containers with the new image
            docker-compose up -d
            
            # Clean up the tar file
            rm tawsyla-backend.tar.gz
            
            # Show running containers
            docker-compose ps
            
            # Show logs
            docker-compose logs --tail=30 nestjs
          EOF

      - name: Cleanup
        if: always()
        run: |
          rm -f tawsyla-backend.tar.gz
