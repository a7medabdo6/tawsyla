name: Build Image and Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          cd tawsyla_backend
          docker build -t tawsyla-backend:${{ github.sha }} .
          docker tag tawsyla-backend:${{ github.sha }} tawsyla-backend:latest

      - name: Save Docker Image
        run: |
          docker save tawsyla-backend:latest | gzip > tawsyla-backend.tar.gz

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.DROPLET_SSH_KEY }}

      - name: Add droplet to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.DROPLET_HOST }} >> ~/.ssh/known_hosts

      - name: Transfer Docker Image to Droplet
        env:
          DROPLET_HOST: ${{ secrets.DROPLET_HOST }}
          DROPLET_USERNAME: ${{ secrets.DROPLET_USERNAME }}
        run: |
          # Create directory on droplet
          ssh $DROPLET_USERNAME@$DROPLET_HOST "mkdir -p /opt/tawsyla"
          
          # Transfer the image
          scp tawsyla-backend.tar.gz $DROPLET_USERNAME@$DROPLET_HOST:/opt/tawsyla/
          
          # Transfer docker-compose and necessary files
          scp docker-compose.yaml $DROPLET_USERNAME@$DROPLET_HOST:/opt/tawsyla/
          scp -r tawsyla_backend/.env $DROPLET_USERNAME@$DROPLET_HOST:/opt/tawsyla/tawsyla_backend/

      - name: Load and Run Docker Image
        env:
          DROPLET_HOST: ${{ secrets.DROPLET_HOST }}
          DROPLET_USERNAME: ${{ secrets.DROPLET_USERNAME }}
        run: |
          ssh -T $DROPLET_USERNAME@$DROPLET_HOST "cd /opt/tawsyla && \
            echo 'Loading Docker image...' && \
            docker load < tawsyla-backend.tar.gz && \
            echo 'Stopping existing containers...' && \
            docker compose down || true && \
            echo 'Starting containers with new image...' && \
            docker compose up -d && \
            echo 'Cleaning up tar file...' && \
            rm -f tawsyla-backend.tar.gz && \
            echo 'Running containers:' && \
            docker compose ps && \
            echo 'Recent logs:' && \
            docker compose logs --tail=30 nestjs"

      - name: Cleanup
        if: always()
        run: |
          rm -f tawsyla-backend.tar.gz
